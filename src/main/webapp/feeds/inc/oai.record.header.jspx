<header
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0">
  <jsp:output omit-xml-declaration="true" />
  <!-- version: '$Id$' -->
    <mm:import externid="set" />
    <!-- oai:HUBerlin.de:3000218 -->
    <identifier>oai:openimages.eu:${_node}</identifier>
    <datestamp><mm:field name="lastmodified"><mm:time format="yyyy-MM-dd" time="${_}" />T<mm:time format="HH:mm:ss" time="${_}" />Z</mm:field></datestamp>

    <c:set var="setlist" value="" />
    
    <!-- check portal (= set): get all the variables -->
    <c:set var="mf">${_node}</c:set>
    <c:set var="creator"><mm:field name="creator" /></c:set>
    <c:set var="keywords"><mm:field name="keywords" escape="none" /></c:set>
    <mm:relatednodescontainer type="tags" role="related" searchdirs="destination">
      <mm:relatednodes>
        <c:set var="tags">${tags}${!empty tags ? ';' : ''}<mm:field name="name" /></c:set>
      </mm:relatednodes>
    </mm:relatednodescontainer>

    
    <!-- list portal filters and their portals. NOTE: constraint is MySQL specific -->
    <mm:listcontainer path="filters,portalrel,pools" searchdirs="source"
      fields="filters.users,filters.tags,filters.keywords,pools.name">
      
      <mm:composite operator="OR">
        <mm:constraint field="filters.users" value="${creator}" operator="LIKE" />
        <c:if test="${!empty keywords}">
          <c:choose>
            <c:when test="${fn:indexOf(keywords, ';') gt -1}">
              <c:forTokens items="${keywords}" delims=";" var="kw">
                <c:set var="regex">[[:&lt;:]]${fn:trim(kw)}[[:&gt;:]]</c:set>
                <mm:constraint field="filters.keywords" value="${regex}" operator="REGEXP" />
              </c:forTokens>
            </c:when>
            <c:otherwise>
              <c:set var="regex">[[:&lt;:]]${fn:trim(keywords)}[[:&gt;:]]</c:set>
              <mm:constraint field="filters.keywords" value="${regex}" operator="REGEXP" />
            </c:otherwise>
          </c:choose>
        </c:if>
        <c:if test="${!empty tags}">
          <c:choose>
            <c:when test="${fn:indexOf(tags, ';') gt -1}">
              <c:forTokens items="${tags}" delims=";" var="tg">
                <c:set var="regex">[[:&lt;:]]${fn:trim(tg)}[[:&gt;:]]</c:set>
                <mm:constraint field="filters.tags" value="${regex}" operator="REGEXP" />
              </c:forTokens>
            </c:when>
            <c:otherwise>
              <c:set var="regex">[[:&lt;:]]${fn:trim(tags)}[[:&gt;:]]</c:set>
              <mm:constraint field="filters.tags" value="${regex}" operator="REGEXP" />
            </c:otherwise>
          </c:choose>
        </c:if>
      </mm:composite>
      
      <mm:list>
    
        <c:set var="excluded" value="false" />
        <!-- if we're here we've found a portal (pools node) by tag, keyword or user -->
        <mm:node element="pools">
          <!-- excluded from portal? -->
          <mm:relatednodescontainer type="mediafragments" role="excluded" searchdirs="destination">
            <mm:constraint field="number" value="${mf}" operator="EQUAL" />
            <mm:relatednodes>
              <c:set var="excluded" value="true" />
            </mm:relatednodes>
          </mm:relatednodescontainer>
          <c:if test="${!excluded}">
            <c:if test="${setlist!=''}">
              <c:set var="setlist" value="${setlist};" />
            </c:if>
            <c:if test="${! fn:contains(setlist, portal)}">
              <mm:import id="oaikey" reset="true">oai-set</mm:import><!-- property key -->
              <c:set var="setname"><mm:function referids="_node@node,oaikey@key" nodemanager="properties" name="get" /></c:set>
              <c:if test="${fn:indexOf(setlist, setname) lt 0}">
                <c:set var="setlist" value="${setlist}${setname}" />
              </c:if>
            </c:if>
          </c:if>
        </mm:node>

      </mm:list>
    </mm:listcontainer>

    
    <!-- or the current node's creator is a portal manager. TODO: check user's rank? -->
    <mm:listcontainer path="mmbaseusers,portalrel,pools" searchdirs="destination"
      fields="mmbaseusers.username,pools.name">
      
      <mm:constraint field="mmbaseusers.username" value="${creator}" operator="EQUAL" />
      
      <mm:list>
        <mm:node element="pools">
          <!-- excluded from portal? -->
          <mm:relatednodescontainer type="mediafragments" role="excluded" searchdirs="destination">
            <mm:constraint field="number" value="$mf" operator="EQUAL" />
            <mm:relatednodes>
              <c:set var="excluded" value="true" />
            </mm:relatednodes>
          </mm:relatednodescontainer>
          <c:if test="${!excluded}">
            <c:if test="${setlist!=''}">
              <c:set var="setlist" value="${setlist};" />
            </c:if>
            <c:if test="${! fn:contains(setlist, portal)}">
              <mm:import id="oaikey" reset="true">oai-set</mm:import><!-- property key -->
              <c:set var="setname"><mm:function referids="_node@node,oaikey@key" nodemanager="properties" name="get" /></c:set>
              <c:if test="${fn:indexOf(setlist, setname) lt 0}">
                <c:set var="setlist" value="${setlist}${setname}" />
              </c:if>
            </c:if>
          </c:if>
        </mm:node>
      </mm:list>
    </mm:listcontainer>
    
    <c:forTokens items="${setlist}" delims=";" var="st">
      <setSpec>${st}</setSpec>
    </c:forTokens>
    
  </header>
