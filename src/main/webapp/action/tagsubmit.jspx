<mm:content 
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    xmlns:fmt="http://java.sun.com/jsp/jstl/fmt"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0"
    expires="0" type="text/html" language="client" postprocessor="none">
<jsp:output doctype-root-element="html"
      doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN"
      doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" />

<mm:cloud method="asis">

  <fmt:setBundle basename="eu.openimages.messages" scope="request" />

  <mm:import externid="nr" /><!-- number of node to tag -->
  <mm:import externid="tag" /><!-- string with tagname -->
  <mm:import externid="delete" /><!-- node number of relation with tag to delete -->
  
  <!-- relate tags -->
  <c:set var="taglen" value="${fn:length(tag)}" />
  
  <c:if test="${!empty tag and taglen lt 3}">
    <p class="err">
      <fmt:message key="tag.tooshort">
        <fmt:param><strong>${tag}</strong></fmt:param>
      </fmt:message>          
    </p>
  </c:if>
  
  <c:if test="${!empty tag and taglen gt 2}">
    
    <!-- check if already related -->
    <mm:node number="$nr" id="medianode">
      <mm:relatednodescontainer type="tags" role="related" searchdirs="destination">
        <mm:constraint field="name" value="$tag" operator="EQUAL" />
        <mm:relatednodes>
          <mm:node id="tagrelated" />
          <p class="err">
            <fmt:message key="tag.already_tagged">
              <fmt:param><strong>${tag}</strong></fmt:param>
            </fmt:message>          
          </p>
        </mm:relatednodes>
      </mm:relatednodescontainer>
    </mm:node>
    
    <!-- check if exists and get tag node -->
    <c:if test="${empty tagrelated}">
      <mm:listnodescontainer type="tags">
        <mm:constraint field="name" value="$tag" operator="EQUAL" />
        <mm:maxnumber value="1" />
        <mm:listnodes>
          <mm:node id="tagnode" />
        </mm:listnodes>
      </mm:listnodescontainer>
    </c:if>
    
    <!-- does not exist yet: create new tag node -->
    <c:if test="${empty tagrelated and empty tagnode}">
      <mm:createnode type="tags" id="tagnode">
        <mm:setfield name="name">${tag}</mm:setfield>
      </mm:createnode>
    </c:if>
    
    <c:if test="${empty tagrelated}">
      <mm:createrelation source="medianode" destination="tagnode" role="related" />      
      <p class="msg">
        <fmt:message key="tag.added">
          <fmt:param><strong>${tag}</strong></fmt:param>
        </fmt:message>          
      </p>
      
      <span class="result">
        <mm:link page="tag">
          <mm:frameworkparam name="component">oip</mm:frameworkparam>
          <mm:frameworkparam name="tag">${tagnode}</mm:frameworkparam>
          <a href="${_}">${tag}</a>
        </mm:link>
      </span>
    </c:if>
    
  </c:if>
  
  <!-- delete (relation with) tag -->
  <c:if test="${!empty delete}">
    <mm:hasnode number="$delete">
      <mm:node number="$delete">
        <mm:maydelete inverse="true">
          <p class="err"><fmt:message key="tag.notallowed" />.</p>
        </mm:maydelete>

        <mm:maydelete>
          <mm:cloudinfo type="usernode" id="iam" write="false" />
          <mm:import id="dnumber" reset="true"><mm:field name="dnumber" /></mm:import>
          
          <mm:node number="$dnumber">
            <mm:log level="info">'${iam}' tries to remove tag '<mm:field name="name" />' from ${nr}.</mm:log>
            <mm:nodeinfo type="type">
              
              <c:choose>
                <c:when test="${!empty iam  and _ eq 'tags'}">
                  <mm:hasnode number="$iam">
                    <mm:deletenode number="$delete" />
                    <p class="msg">
                  
                      <mm:log level="info">Tag removed: '<mm:field name="name" />' from ${nr} by ${iam}.</mm:log>
                      <fmt:message key="tag.removed">
                        <fmt:param><strong><mm:field name="name" /></strong></fmt:param>
                      </fmt:message>.
                    </p>
                  </mm:hasnode>
                </c:when>
                <c:otherwise>
                  <p class="err"><fmt:message key="tag.notag" /></p>
                </c:otherwise>
              </c:choose>
  
            </mm:nodeinfo>
          </mm:node>
  
        </mm:maydelete>
      </mm:node>
    </mm:hasnode>
  </c:if>


</mm:cloud>
</mm:content>
