<mm:content
    type="application/xml"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:fmt="http://java.sun.com/jsp/jstl/fmt"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0"
    xmlns:oip="urn:jsptagdir:/WEB-INF/tags/oip"
    >

  <jsp:output omit-xml-declaration="true" />
  <jsp:directive.page import="org.mmbase.util.*,java.util.concurrent.*" />
  <mm:cloud method="delegate" authenticate="class" id="cloud">
    <div
        class="mm_c c_oip b_user-create ${requestScope.className}"
        id="${requestScope['org.mmbase.componentId']}">

      <script type="text/javascript">
        $(document).ready(function() {
          var validator = new MMBaseValidator();
          validator.prefetchNodeManager('mmbaseusers');
          validator.validateHook = function(valid) {
            if (document.getElementById('submit_registration')) {
                document.getElementById('submit_registration').disabled = this.invalidElements != 0;
            }
          }
          validator.setup(document.getElementById("${requestScope['org.mmbase.componentId']}"));
        });
      </script>

      <mm:import externid="submit_registration" />
      <mm:import externid="confirm" />
      <mm:import externid="eu.openimages.legaltext" from="request" id="legaltext" />
      <mm:import externid="mm_upload_form_to_address" /><!-- sort of SPAM protect -->
      
      <!-- captcha -->
      <mm:import externid="captcha" id="captcha" jspvar="captcha" />
      <mm:import externid="captchakey" from="session" />

      <mm:form styleClass="${empty submit_registration ? 'notsubmitted' : 'submitted'}">

        <mm:import id="buffer">
          <mm:createnode id="newuser" type="mmbaseusers" commitonclose="false">
            <fieldset class="labelininput">
              <mm:fieldlist fields="username,password,confirmpassword,email">
                <div>
                  <mm:fieldinfo type="forid">
                    <label for="${_}"><span><mm:fieldinfo type="guiname" /></span></label>
                  </mm:fieldinfo>
                  <p class="info"><mm:fieldinfo type="description" escape="inline" /></p>
                  <mm:fieldinfo type="input" /><mm:fieldinfo type="errors" />
                </div>
              </mm:fieldlist>
              <!-- sort of protection against SPAM bots: field hidden with javascript -->
              <div class="mm_upload_form_to_address">
                <label for="mm_upload_form_to_address">To</label>
                <input type="text" id="mm_upload_form_to_address" name="mm_upload_form_to_address" value="" />
              </div>
            </fieldset>
            <fieldset class="confirm-registration">
              <div class="legaltext"><mm:write referid="legaltext" escape="none" /></div>
              <div>
                <mm:import id="termsofuse_link">
                  <a href="${mm:link('/terms')}">Terms of Use</a>
                </mm:import>
                <!-- page 'Terms of Use' has alias page_terms -->
                <mm:node number="page_terms" notfound="skip">
                  <mm:import id="termsofuse_link" reset="true">
                    <mm:link page="page" referids="_node@n">
                      <mm:frameworkparam name="component">mmsite</mm:frameworkparam>
                      <a href="${_}">
                        <mm:nodefunction name="translation"><mm:field name="title" /></mm:nodefunction>
                      </a>
                    </mm:link>
                  </mm:import>
                </mm:node>
                <input type="checkbox" name="confirm" id="confirm" value="yes" />
                <label for="confirm" class="confirm">
                  <!-- should read something like: I hereby accept the <a href="/terms">Terms of Use</a>. -->
                  <fmt:message key="register.i_accept_terms_of_use">
                    <fmt:param><mm:write referid="termsofuse_link" escape="none" /></fmt:param>
                  </fmt:message>
                </label>
                <c:if test="${!empty submit_registration and empty confirm}">
                  <div class="mm_check_error"><fmt:message key="register.confirm.error" /></div>
                </c:if>
              </div>
            </fieldset>
            <fieldset class="captcha">
              <div>
                <label for="captcha">Please retype the text in this image</label>
                <oip:captcha />
                <input type="text" name="captcha" id="captcha" size="12" maxlength="7" autocomplete="off" />
              </div>
            </fieldset>
            <fieldset class="buttons">
              <div>
                <fmt:message key="register.i_accept_create_account" var="register_button" />
                <input id="submit_registration" type="submit" name="submit_registration" value="${register_button}" class="submit" />
              </div>
            </fieldset>
          </mm:createnode>
        </mm:import>

        <mm:notpresent referid="submit_registration">
          <mm:write referid="buffer" escape="none" />
        </mm:notpresent>

        <mm:present referid="submit_registration">

          <c:if test="${captcha ne captchakey}">
            <c:set var="errortext">The captcha code '${captcha}' you entered was incorrect.</c:set>
          </c:if>
          <c:if test="${confirm ne 'yes'}">
            <c:set var="errortext"><fmt:message key="register.confirm.error" /></c:set>
          </c:if>
          <mm:valid inverse="true">
            <c:set var="errortext"><fmt:message key="register.incomplete" /> ${errortext}</c:set>
          </mm:valid>

          <c:choose>
            <c:when test="${empty errortext and empty mm_upload_form_to_address}"><!-- and check for empty SPAM address -->
              <mm:valid>
                <mm:commit />
                <mm:node cloud="cloud" number="defaultusergroup" id="defaultusergroup" />
                <mm:node number="${newuser}" cloud="cloud">
                  <mm:setfield name="rank">cloudcontextsecurity_rank_site_user</mm:setfield>
                  <mm:setfield name="groups">${defaultusergroup}</mm:setfield>
                </mm:node>
                <p class="msg stay">
                  <fmt:message key="register.complete">
                    <fmt:param value="${newuser.username}" />
                    <fmt:param value="${newuser.email}" />
                  </fmt:message>
                </p>
              </mm:valid>
            </c:when>
            <c:otherwise>
              <p class="err">${errortext}</p>
              <mm:write referid="buffer" escape="none" />
              <mm:cancel />
            </c:otherwise>
          </c:choose>

        </mm:present>

      </mm:form>
    </div>

  </mm:cloud>
</mm:content>
